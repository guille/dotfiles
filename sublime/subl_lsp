// Settings in here override those in "LSP/LSP.sublime-settings"
{
	"show_diagnostics_count_in_view_status": true,
	"show_diagnostics_panel_on_save": 1,
	"lsp_format_on_save": true,
	"log_max_size": 0,
	"lsp_code_actions_on_save": {
	  "source.fixAll": true,
	  "source.organizeImports": true,
	},
	// Disable default servers, despite SublimeLSP's warnings
	"default_clients": {},
	"clients": {
		// Best docs for configuring servers manually are at https://github.com/neovim/nvim-lspconfig
		//
		// https://shopify.github.io/ruby-lsp/
		"ruby-lsp": {
			"enabled": true,
			"command": [
				"ruby-lsp"
			],
			"selector": "source.ruby | text.html.rails",
			"initializationOptions": {
				"enabledFeatures": {
					"diagnostics": true
				},
				"experimentalFeaturesEnabled": true
			}
		},
		// https://go.dev/gopls/editor/sublime
		// https://go.dev/gopls/settings
		"gopls": {
			"enabled": true,
			"command": [
				"gopls"
			],
			"selector": "source.go | source.gomod",
		},
		// https://docs.astral.sh/ruff/editors/settings/
		"ruff": {
			"enabled": true,
			"command": [
				"ruff",
				"server"
			],
			"settings": {
				"organizeImports": true,
				"lint.enable": true,
				"lint.extendSelect": ["I"],
			},
			"selector": "source.python",
		},
		// https://docs.basedpyright.com/latest/configuration/language-server-settings/
		"basedpyright": {
			"enabled": true,
			"command": [
				"basedpyright-langserver",
				"--stdio"
			],
			"settings": {
				// Ruff handles this
				"basedpyright.disableOrganizeImports": false,
				// ["openFilesOnly", "workspace"]
				"basedpyright.analysis.diagnosticMode": "openFilesOnly",
				// Automatically add common search paths like 'src'
				"basedpyright.analysis.autoSearchPaths": true,
				// Offer auto-import completions.
				"basedpyright.analysis.autoImportCompletions": true,
				// Use library implementations to extract type information when type stub is not present.
				"basedpyright.analysis.useLibraryCodeForTypes": true,
			},
			"selector": "source.python",
		},
		// https://github.com/redhat-developer/yaml-language-server
		"yaml-language-server": {
			"enabled": true,
			"command": [
				"yaml-language-server",
				"--stdio"
			],
			"settings": {
				"redhat.telemetry.enabled": false,
				"yaml.format.enable": true,
			},
			"selector": "(source.yml | source.yaml) - source.yaml.go",
		}
	}
}

[core]
	autocrlf = input
	pager = delta
	excludesFile = ~/.gitignore
	editor = nvim +startinsert

[init]
	defaultBranch = master

[branch]
	sort = -committerdate

[tag]
	sort = -version:refname
	gpgSign = true

[commit]
	gpgSign = true

[gpg]
	format = ssh

# Separate editor for eg interactive rebases
[sequence]
	editor = subl -w

[alias]
	st = status
	co = checkout
	di = diff
	dc = diff --cached
	last = show --quiet
	amend = commit --amend
	qamend = commit --amend --no-edit
	pushf = push --force-with-lease
	# amending local changes before pushing
	fixup = "!git log --oneline $(git merge-base HEAD ${@:-'@{u}'})..HEAD | fzf --preview 'git show --color=always {1}' | cut -d' ' -f1 | xargs -r git commit --fixup"
	autosquash = "!git rebase --autosquash $(git merge-base HEAD ${@:-'@{u}'})"
	# same but including pushed commits
	fixupall = "!git log --since='1 month ago' --oneline | fzf --preview 'git show --color=always {1}' | cut -d' ' -f1 | xargs -r git commit --fixup"
	# weirdly useful
	git = !git
	# Stats
	ds = diff --stat=160,120
	# Rebase with the given number of latest commits.
	reb = "!r() { git rebase --autosquash HEAD~$1; }; r"
	rebi = "!r() { git rebase -i HEAD~$1; }; r"
	# fancy fzf helper
	cs = "! fzf_git_commits"

[status]
	submoduleSummary = true

[pull]
	rebase = true

[push]
	autoSetupRemote = true
	followTags = true

[rebase]
	autoStash = true
	autoSquash = true

[fetch]
	prune = true

[interactive]
	diffFilter = delta --color-only

[delta]
	navigate = true  # use n and N to move between diff sections
	syntax-theme = Monokai Extended

[merge]
	conflictStyle = zdiff3

[diff]
	colorMoved = default
	algorithm = histogram
	submodule = log

[rerere]
	enabled = true

[column]
	ui = auto

[help]
	autocorrect = 20

[url "git@github.com:"]
		pushInsteadOf = "https://github.com/"

# Usually: work email, maintenance repos
[include]
	path = ~/.gitconfig.local

[includeIf "gitdir:~/projects/"]
	path = ~/.gitconfig-personal

[includeIf "gitdir:~/work/"]
	path = ~/.gitconfig-work

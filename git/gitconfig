[core]
	autocrlf = input
	# https://github.com/dandavison/delta/issues/359
	# Decorations needs to be first: https://github.com/dandavison/delta/issues/549
	pager = DELTA_FEATURES=$([[ ${COLUMNS:-$(tput cols)} -gt 120 ]] && echo "+decorations side-by-side" || echo "+") delta
	excludesFile = ~/.gitignore
	abbrev = 4
	editor = nvim

[init]
	defaultBranch = master

[branch]
	sort = -committerdate

[tag]
	sort = -version:refname
	gpgSign = true

[commit]
	gpgSign = true

[gpg]
	format = ssh

[log]
	abbrevCommit = true

# Separate editor for eg interactive rebases
[sequence]
	editor = subl -w

[alias]
	st = status
	co = checkout
	di = diff
	dc = diff --cached
	blamedeep = blame -w -C -C -C
	last = show --quiet
	amend = commit --amend
	qamend = commit --amend --no-edit
	pushf = push --force-with-lease
	up = !git fetch && git rebase refs/remotes/origin/HEAD
	# amending local changes before pushing
	fixup = "!git log --oneline $(git merge-base HEAD ${@:-'@{u}'})..HEAD | fzf --preview 'git show --color=always {1}' | cut -d' ' -f1 | xargs -r git commit --fixup"
	autosquash = "!git rebase --autosquash $(git merge-base HEAD ${@:-'@{u}'})"
	# same but including pushed commits
	fixupall = "!git log --since='1 month ago' --oneline | fzf --preview 'git show --color=always {1}' | cut -d' ' -f1 | xargs -r git commit --fixup"
	# weirdly useful
	git = !git
	# Stats
	ds = diff --stat=160,120 --compact-summary
	# Rebase with the given number of latest commits.
	reb = "!r() { git rebase --autosquash HEAD~$1; }; r"
	rebi = "!r() { git rebase -i HEAD~$1; }; r"
	# fancy fzf helpers
	cs = "! fzf_git_commits"
	ga = "! fzf_git_add"
	gap = "! fzf_git_add add -p"
	i = "!git add -N . && git gap"
	rewind = "! fzf_git_restore_file"

[status]
	submoduleSummary = true

[pull]
	rebase = true

[push]
	autoSetupRemote = true
	followTags = true

[rebase]
	autoStash = true
	autoSquash = true

[fetch]
	prune = true

[interactive]
	diffFilter = delta --color-only

[delta]
	navigate = true  # use n and N to move between diff sections
	line-numbers = true
	tabs = 4
	syntax-theme = Monokai Extended
	features = decorations

[merge]
	conflictStyle = zdiff3

[diff]
	colorMoved = default
	algorithm = histogram
	submodule = log

[rerere]
	enabled = true

[column]
	ui = auto

[help]
	autocorrect = 10

[url "git@github.com:"]
	pushInsteadOf = "https://github.com/"

# Usually: work email, maintenance repos
[include]
	path = ~/.gitconfig.local

[includeIf "gitdir:~/projects/"]
	path = ~/.gitconfig-personal

[includeIf "gitdir:~/work/"]
	path = ~/.gitconfig-work

[delta "decorations"]
	file-style = "#fd971f bold"
	file-decoration-style = "#84786A box ul"
	file-added-label = [+]
	file-copied-label = [==]
	file-modified-label = [*]
	file-removed-label = [-]
	file-renamed-label = [->]
	hunk-label = " "
	hunk-header-style = file line-number syntax bold italic
	hunk-header-decoration-style = "#84786A ul"
	hunk-header-file-style = "#ff9b00"
	hunk-header-line-number-style = "#e6db74 bold"
	line-numbers-left-format = " {nm:>3} │ "
	line-numbers-right-format = "{np:>3} │ "
	line-numbers-left-style = "#84786A"
	line-numbers-right-style = "#84786A"
	line-numbers-minus-style = "#e95678 bold"
	line-numbers-plus-style = "#1ac71e bold"
	line-numbers-zero-style = "#8F908A"
	# More diff
	plus-style = "syntax #3d5213"
	plus-emph-style = "syntax #3d5213 bold"
	plus-non-emph-style = syntax auto
	minus-style = "syntax #4a0f23"
	minus-emph-style = "syntax #4a0f23 dim"
	minus-non-emph-style = syntax auto
	inline-hint-style = syntax
	zero-style = syntax
	merge-conflict-ours-diff-header-style = "#e6db74 reverse bold"
	merge-conflict-theirs-diff-header-style = "#e6db74 reverse bold overline"
	merge-conflict-ours-diff-header-decoration-style = ''
	merge-conflict-theirs-diff-header-decoration-style = ''
	# Blame
	blame-code-style = syntax
	blame-format = " {author:<18} ({commit:>7}) {timestamp:^13} "
	blame-separator-style = "#84786A"
	blame-palette = "#261a12 #362619 #463220 #563e27 #664a2e #765635 #86623c #966e43 #a67a4a #b68651"
	# grep, don't reallt use it but...
	grep-file-style = "#fd971f bold"
	grep-line-number-style = "#e6db74 bold"
	grep-match-line-style = syntax
	grep-match-word-style = "syntax bold underline"
	# Git log / show
	commit-decoration-style = "#84786A box"
